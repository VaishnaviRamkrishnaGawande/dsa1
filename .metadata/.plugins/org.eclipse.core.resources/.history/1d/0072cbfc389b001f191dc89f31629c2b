package com.demo.linkedlist;

public class DoublyLinkedList {
	class node
	{
		int data;
		node next,prev;
		public node(int data) {
			super();
			this.data = data;
			this.next=null;
			this.prev=null;
		}
		
	}
	node head;
	public DoublyLinkedList() {
		head=null;
	}
	public void addNode(int val)
	{
		node newnode=new node(val);
		if(head==null)
		{
			head=newnode;
		}
		else
		{
			node temp=head;
			while(temp.next!=null)
			{
				temp=temp.next;
			}
			temp.next=newnode;
			newnode.prev=temp;
		}
	}
	public void display()
	{
		node temp=head;
		if(head!=null)
		{
			while(temp!=null)
			{
				System.out.println(temp.data);
				temp=temp.next;
			}
		}
	}
	
	public void addBypos(int val,int pos)
	{
		node newnode=new node(val);
		if(pos==1)
		{
			if(head==null)
			{
				head=newnode;
			}
			else
			{
				newnode.next=head;
				head.prev=newnode;
				head=newnode;
			}
		}else
		{
			node temp=head;
			for(int i=0;temp!=null && i<pos-2;i++)
			{
				temp=temp.next;
			}
			if(temp==null)
			{
				System.out.println("Beyond limit");
			}
			else
			{
				newnode.next=temp.next;
				if(temp.next!=null)
				{
					temp.next.prev=newnode;
				}
				newnode.prev=temp;
				temp.next=newnode;
			}
		}
	}
	

}
